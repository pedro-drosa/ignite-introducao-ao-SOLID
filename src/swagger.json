{
  "openapi": "3.0.0",
  "info": {
    "title": "Users API",
    "description": "Listing and registration of users.",
    "version": "1.0.0"
  },
  "paths": {
    "/users": {
      "post": {
        "tags": ["Users"],
        "summary": "Retorna uma lista de usuários",
        "description": "A rota deve receber `name`, e `email` dentro do corpo da requisição para que seja possível cadastrar um usuário.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Users"],
        "summary": "listar informações do usuário",
        "description": "A rota deve receber, pelo header da requisição, uma propriedade `user_id` contendo o `id` do usuário e retornar uma lista com todos os usuários cadastrados.<br/> O `id` deverá ser usado para validar se o usuário que está solicitando a listagem é um admin. O retorno da lista deve ser feito apenas se o usuário for admin.",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/admin": {
      "patch": {
        "tags": ["Users"],
        "summary": "Transforma um usuário em administrador",
        "description": "A rota deve receber, nos parâmetros da rota, o `id` de um usuário e transformar esse usuário em admin.",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "O ID do usuário"
            }
          }
        ],
        "responses": {
          "200": { "description": "Ok" },
          "404": {
            "description": "Error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": ["Users"],
        "summary": "listar informações do usuário",
        "description": "A rota deve receber, nos parâmetros da rota, o `id` de um usuário e devolver as informações do usuário encontrado pelo corpo da resposta.",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "O ID do usuário"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/UserResponse"
                }
              }
            }
          },
          "404": {
            "description": "Error message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "email": { "type": "string" }
      },
      "example": {
        "name": "Pedro Mascarenhas",
        "email": "pedro@mascarenhas.com"
      }
    },
    "UserResponse": {
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "name": { "type": "string" },
        "email": { "type": "string" },
        "admin": { "type": "boolean" },
        "created_at": { "type": "string" },
        "updated_at": { "type": "string" }
      },
      "example": {
        "id": "aa777051-190b-45f1-a8f5-e31ec4dfe4d6",
        "name": "Pedro Mascarenhas",
        "email": "pedro@mascarenhas.com",
        "admin": true,
        "created_at": "2022-08-19T13:19:08.458Z",
        "updated_at": "2022-08-19T13:19:08.458Z"
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "error": { "type": "string" }
      },
      "example": { "error": "Error message" }
    }
  }
}
